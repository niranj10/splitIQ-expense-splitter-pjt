{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/v1/auth/';\n\n// Get user from localStorage if it exists\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  token: user ? user.token : null,\n  // Keep token separate for easy access\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// A helper function to process the API response\nconst processAuthResponse = response => {\n  const payload = {\n    ...response.data.data,\n    // The user object from backend\n    token: response.data.token // Attach the token to it\n  };\n  localStorage.setItem('user', JSON.stringify(payload));\n  return payload;\n};\n\n// Login user\nexport const login = createAsyncThunk('auth/login', async (userData, thunkAPI) => {\n  try {\n    const response = await axios.post(API_URL + 'login', userData);\n    return processAuthResponse(response);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.error || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Register user\nexport const register = createAsyncThunk('auth/register', async (userData, thunkAPI) => {\n  try {\n    const response = await axios.post(API_URL + 'register', userData);\n    return processAuthResponse(response);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.error || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Logout user\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  localStorage.removeItem('user');\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    const handlePending = state => {\n      state.isLoading = true;\n    };\n    const handleFulfilled = (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n      state.token = action.payload.token;\n    };\n    const handleRejected = (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n      state.token = null;\n    };\n    builder.addCase(login.pending, handlePending).addCase(login.fulfilled, handleFulfilled).addCase(login.rejected, handleRejected).addCase(register.pending, handlePending).addCase(register.fulfilled, handleFulfilled).addCase(register.rejected, handleRejected).addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","user","JSON","parse","localStorage","getItem","initialState","token","isError","isSuccess","isLoading","message","processAuthResponse","response","payload","data","setItem","stringify","login","userData","thunkAPI","post","error","toString","rejectWithValue","register","logout","removeItem","authSlice","name","reducers","reset","state","extraReducers","builder","handlePending","handleFulfilled","action","handleRejected","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/srisa/OneDrive/Desktop/SplitIQ/expense-splitter-frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/v1/auth/';\r\n\r\n// Get user from localStorage if it exists\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  token: user ? user.token : null, // Keep token separate for easy access\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\n// A helper function to process the API response\r\nconst processAuthResponse = (response) => {\r\n  const payload = {\r\n    ...response.data.data, // The user object from backend\r\n    token: response.data.token, // Attach the token to it\r\n  };\r\n  localStorage.setItem('user', JSON.stringify(payload));\r\n  return payload;\r\n};\r\n\r\n// Login user\r\nexport const login = createAsyncThunk('auth/login', async (userData, thunkAPI) => {\r\n  try {\r\n    const response = await axios.post(API_URL + 'login', userData);\r\n    return processAuthResponse(response);\r\n  } catch (error) {\r\n    const message =\r\n      (error.response && error.response.data && error.response.data.error) ||\r\n      error.message ||\r\n      error.toString();\r\n    return thunkAPI.rejectWithValue(message);\r\n  }\r\n});\r\n\r\n// Register user\r\nexport const register = createAsyncThunk('auth/register', async (userData, thunkAPI) => {\r\n  try {\r\n    const response = await axios.post(API_URL + 'register', userData);\r\n    return processAuthResponse(response);\r\n  } catch (error) {\r\n    const message =\r\n      (error.response && error.response.data && error.response.data.error) ||\r\n      error.message ||\r\n      error.toString();\r\n    return thunkAPI.rejectWithValue(message);\r\n  }\r\n});\r\n\r\n// Logout user\r\nexport const logout = createAsyncThunk('auth/logout', async () => {\r\n  localStorage.removeItem('user');\r\n});\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = '';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    const handlePending = (state) => {\r\n      state.isLoading = true;\r\n    };\r\n    const handleFulfilled = (state, action) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = true;\r\n      state.user = action.payload;\r\n      state.token = action.payload.token;\r\n    };\r\n    const handleRejected = (state, action) => {\r\n      state.isLoading = false;\r\n      state.isError = true;\r\n      state.message = action.payload;\r\n      state.user = null;\r\n      state.token = null;\r\n    };\r\n\r\n    builder\r\n      .addCase(login.pending, handlePending)\r\n      .addCase(login.fulfilled, handleFulfilled)\r\n      .addCase(login.rejected, handleRejected)\r\n      .addCase(register.pending, handlePending)\r\n      .addCase(register.fulfilled, handleFulfilled)\r\n      .addCase(register.rejected, handleRejected)\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.token = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}