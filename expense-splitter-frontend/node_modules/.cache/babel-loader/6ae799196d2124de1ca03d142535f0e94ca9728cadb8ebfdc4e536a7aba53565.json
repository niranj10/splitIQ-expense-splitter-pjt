{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/v1/groups/';\nconst initialState = {\n  groups: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// Get user groups\nexport const getGroups = createAsyncThunk('groups/getAll', async (_, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(API_URL, config);\n    return response.data.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.error || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const groupSlice = createSlice({\n  name: 'group',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(getGroups.pending, state => {\n      state.isLoading = true;\n    }).addCase(getGroups.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.groups = action.payload;\n    }).addCase(getGroups.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = groupSlice.actions;\nexport default groupSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","initialState","groups","isError","isSuccess","isLoading","message","getGroups","_","thunkAPI","token","getState","auth","config","headers","Authorization","response","get","data","error","toString","rejectWithValue","groupSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/srisa/OneDrive/Desktop/fullstack/expense-splitter-frontend/src/features/groups/groupSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/v1/groups/';\r\n\r\nconst initialState = {\r\n  groups: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\n// Get user groups\r\nexport const getGroups = createAsyncThunk('groups/getAll', async (_, thunkAPI) => {\r\n  try {\r\n    const token = thunkAPI.getState().auth.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.get(API_URL, config);\r\n    return response.data.data;\r\n  } catch (error) {\r\n    const message =\r\n      (error.response && error.response.data && error.response.data.error) ||\r\n      error.message ||\r\n      error.toString();\r\n    return thunkAPI.rejectWithValue(message);\r\n  }\r\n});\r\n\r\nexport const groupSlice = createSlice({\r\n  name: 'group',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getGroups.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getGroups.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.groups = action.payload;\r\n      })\r\n      .addCase(getGroups.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = groupSlice.actions;\r\nexport default groupSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,sCAAsC;AAEtD,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGT,gBAAgB,CAAC,eAAe,EAAE,OAAOU,CAAC,EAAEC,QAAQ,KAAK;EAChF,IAAI;IACF,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACF,KAAK;IAC5C,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK;MAChC;IACF,CAAC;IACD,MAAMM,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAACjB,OAAO,EAAEa,MAAM,CAAC;IACjD,OAAOG,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMb,OAAO,GACVa,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,IAAIC,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACC,KAAK,IACnEA,KAAK,CAACb,OAAO,IACba,KAAK,CAACC,QAAQ,CAAC,CAAC;IAClB,OAAOX,QAAQ,CAACY,eAAe,CAACf,OAAO,CAAC;EAC1C;AACF,CAAC,CAAC;AAEF,OAAO,MAAMgB,UAAU,GAAGzB,WAAW,CAAC;EACpC0B,IAAI,EAAE,OAAO;EACbtB,YAAY;EACZuB,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAKzB;EACpB,CAAC;EACD0B,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACtB,SAAS,CAACuB,OAAO,EAAGJ,KAAK,IAAK;MACrCA,KAAK,CAACrB,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDwB,OAAO,CAACtB,SAAS,CAACwB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC/CN,KAAK,CAACrB,SAAS,GAAG,KAAK;MACvBqB,KAAK,CAACtB,SAAS,GAAG,IAAI;MACtBsB,KAAK,CAACxB,MAAM,GAAG8B,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAACtB,SAAS,CAAC2B,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC9CN,KAAK,CAACrB,SAAS,GAAG,KAAK;MACvBqB,KAAK,CAACvB,OAAO,GAAG,IAAI;MACpBuB,KAAK,CAACpB,OAAO,GAAG0B,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAM,CAAC,GAAGH,UAAU,CAACa,OAAO;AAC3C,eAAeb,UAAU,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}