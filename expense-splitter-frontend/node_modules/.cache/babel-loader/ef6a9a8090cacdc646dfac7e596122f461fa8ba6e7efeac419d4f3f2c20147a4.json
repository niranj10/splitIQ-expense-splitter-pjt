{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/v1/';\nconst initialState = {\n  expenses: [],\n  balances: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// Get expenses for a group\nexport const getExpensesForGroup = createAsyncThunk('expenses/getForGroup', async (groupId, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(`${API_URL}groups/${groupId}/expenses`, config);\n    return response.data.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.error || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get balances for a group\nexport const getGroupBalances = createAsyncThunk('expenses/getBalances', async (groupId, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(`${API_URL}groups/${groupId}/balances`, config);\n    return response.data.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.error || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const addExpense = createAsyncThunk('expenses/add', async (expenseData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.post(API_URL + 'expenses', expenseData, config);\n    // After adding, we need to refresh both expenses and balances\n    thunkAPI.dispatch(getExpensesForGroup(expenseData.group));\n    thunkAPI.dispatch(getGroupBalances(expenseData.group));\n    return response.data.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.error || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const expenseSlice = createSlice({\n  name: 'expense',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder\n    // ... (keep all existing cases for getExpensesForGroup and getGroupBalances)\n    .addCase(addExpense.pending, state => {\n      state.isLoading = true;\n    }).addCase(addExpense.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      // We don't need to push to the array here because the dispatch calls will refresh the data\n    }).addCase(addExpense.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = expenseSlice.actions;\nexport default expenseSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","initialState","expenses","balances","isError","isSuccess","isLoading","message","getExpensesForGroup","groupId","thunkAPI","token","getState","auth","config","headers","Authorization","response","get","data","error","toString","rejectWithValue","getGroupBalances","addExpense","expenseData","post","dispatch","group","expenseSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","rejected","payload","actions","reducer"],"sources":["C:/Users/srisa/OneDrive/Desktop/fullstack/expense-splitter-frontend/src/features/expenses/expenseSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/v1/';\r\n\r\nconst initialState = {\r\n  expenses: [],\r\n  balances: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\n// Get expenses for a group\r\nexport const getExpensesForGroup = createAsyncThunk('expenses/getForGroup', async (groupId, thunkAPI) => {\r\n  try {\r\n    const token = thunkAPI.getState().auth.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.get(`${API_URL}groups/${groupId}/expenses`, config);\r\n    return response.data.data;\r\n  } catch (error) {\r\n    const message =\r\n      (error.response && error.response.data && error.response.data.error) ||\r\n      error.message ||\r\n      error.toString();\r\n    return thunkAPI.rejectWithValue(message);\r\n  }\r\n});\r\n\r\n// Get balances for a group\r\nexport const getGroupBalances = createAsyncThunk('expenses/getBalances', async (groupId, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.token;\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const response = await axios.get(`${API_URL}groups/${groupId}/balances`, config);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response && error.response.data && error.response.data.error) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  });\r\n\r\n\r\nexport const addExpense = createAsyncThunk('expenses/add', async (expenseData, thunkAPI) => {\r\n    try {\r\n        const token = thunkAPI.getState().auth.token;\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        };\r\n        const response = await axios.post(API_URL + 'expenses', expenseData, config);\r\n        // After adding, we need to refresh both expenses and balances\r\n        thunkAPI.dispatch(getExpensesForGroup(expenseData.group));\r\n        thunkAPI.dispatch(getGroupBalances(expenseData.group));\r\n        return response.data.data;\r\n    } catch (error) {\r\n        const message =\r\n            (error.response && error.response.data && error.response.data.error) ||\r\n            error.message ||\r\n            error.toString();\r\n        return thunkAPI.rejectWithValue(message);\r\n    }\r\n});\r\n\r\nexport const expenseSlice = createSlice({\r\n    name: 'expense',\r\n    initialState,\r\n    reducers: {\r\n        reset: (state) => initialState,\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            // ... (keep all existing cases for getExpensesForGroup and getGroupBalances)\r\n            .addCase(addExpense.pending, (state) => {\r\n                state.isLoading = true;\r\n            })\r\n            .addCase(addExpense.fulfilled, (state, action) => {\r\n                state.isLoading = false;\r\n                state.isSuccess = true;\r\n                // We don't need to push to the array here because the dispatch calls will refresh the data\r\n            })\r\n            .addCase(addExpense.rejected, (state, action) => {\r\n                state.isLoading = false;\r\n                state.isError = true;\r\n                state.message = action.payload;\r\n            });\r\n    },\r\n})\r\n\r\nexport const { reset } = expenseSlice.actions;\r\nexport default expenseSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}